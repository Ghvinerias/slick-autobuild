name: Build and Push Docker Images

permissions:
  contents: read

on:
  push:
    branches: [main, master]
    # Removed path restrictions - we'll dynamically check for Dockerfiles in the script

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check-changes.outputs.should_build }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - id: check-changes
        run: |
          # Check if there are changes to Go files, Dockerfile, or go.mod/go.sum
          if git diff --name-only HEAD^ HEAD | grep -E '\.(go|mod|sum)$|^Dockerfile$'; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "Changes detected in Go files or Dockerfile"
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
            echo "No relevant changes detected"
          fi

  build-and-push:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          base_url: https://vault.bitwarden.com
          secrets: |
            a35d32e4-fc58-4d80-a927-b35400c210f7 > DOCKER_USERNAME
            5f8b4016-fb5d-45fc-9e13-b35400be5c46 > DOCKER_PASSWORD
            2f3b9e39-4af4-463e-bfae-b35400c41034 > TELEGRAM_CHAT_ID
            7ceeeaf0-9ce5-4fde-ad1a-b35400c3dcd4 > TELEGRAM_BOT_TOKEN
      
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Run tests
        run: go test -v ./...

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: slickg/slick-autobuild
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=v0.0.1
            type=sha,format=short
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=slickg/slick-autobuild:buildcache
          cache-to: type=registry,ref=slickg/slick-autobuild:buildcache,mode=max

  notify:
    needs: [detect-changes, build-and-push]
    if: ${{ always() && needs.detect-changes.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_CHAT_ID }}
          token: ${{ env.TELEGRAM_BOT_TOKEN }}
          message: |
            üê≥ Docker image build status: ${{ needs.build-and-push.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}

            Project: slick-autobuild CLI tool
            Image: slickg/slick-autobuild

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.event.after }}
            Triggered by: ${{ github.actor }}
